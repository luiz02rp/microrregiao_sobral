---
title: "testes_artigo"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
library(ggplot2)
library(tidyverse)
library(psych)
library(dplyr)
library(janitor)
library(ggpubr)
library(corrplot)
library(rcompanion)
library(stringr)
library(stringi)
library(ggrepel)
library(car)
library(lmtest)
library(broom)
library(performance)
```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Importação"

df <- read.csv("data/2_planilha_psis_níveis_atencao.csv",
               fileEncoding = "UTF-8-BOM", 
stringsAsFactors = FALSE)

df2 <- read.csv("data/pop_idade_sexo - Página1.csv")

equipamentos_niveis <- read_csv("data/niveis_estabelecimentos_micro_sobral - Página1.csv")

df2 <- janitor::clean_names(df2)
df <- janitor::clean_names(df)
equipamentos_niveis <- janitor::clean_names(equipamentos_niveis)

```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Tratamento dos dados"

colunas_para_manter_como_texto <- c("municipios", "qual_nivel_predomina")

colunas_caracter <- names(df)[sapply(df, is.character)]

colunas_para_converter <- setdiff(colunas_caracter, colunas_para_manter_como_texto)

print(colunas_para_converter)

colunas_texto <- c(df$municipios, df$qual_nivel_predomina)

limpa_coluna <- function(col) {
  col <- gsub("\\.", "", col)       # remove ponto de milhar
  col <- gsub(",", ".", col)        # troca vírgula decimal por ponto
  col <- gsub("[^0-9.-]", "", col)  # remove qualquer outro símbolo
  col <- trimws(col)
  return(as.numeric(col))
}

df[colunas_para_converter] <- lapply(df[colunas_para_converter], limpa_coluna)

```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Tratamento dos dados"

df <- left_join(df, df2, by = c("municipios" = "municipio"))

df <- df |> 
  rename(
    pop_pri = prim_psi,
    pop_sec = sec_psi,
    pop_ter = ter_psi,
    atencao_primaria_psis = atencao_primaria,
    atencao_secundaria_psis = atencao_secundaria,
    atencao_terciaria_psis = atencao_terciaria
  )

df$pop_pri[df$pop_pri == Inf] <- max(df$pop_pri[is.finite(df$pop_pri)], na.rm = TRUE)
df$pop_sec[df$pop_sec == Inf] <- max(df$pop_sec[is.finite(df$pop_sec)], na.rm = TRUE)
df$pop_ter[df$pop_ter == Inf] <- max(df$pop_ter[is.finite(df$pop_ter)], na.rm = TRUE)

df <- df[-c(25, 26, 27), ]

df <- df |>
  select(-c(pop_total:idosos_homens))

df <- df %>%
  rename(municipio = municipios) %>%              # padroniza nome da coluna
  mutate(
    municipio = str_to_lower(municipio),
    municipio = str_squish(municipio),
    municipio = stri_trans_general(municipio, "Latin-ASCII")
  )

# Para equipamentos_niveis
equipamentos_niveis <- equipamentos_niveis %>%
  rename(municipio = municipio) %>%               # padroniza nome da coluna
  mutate(
    municipio = str_to_lower(municipio),
    municipio = str_squish(municipio),
    municipio = stri_trans_general(municipio, "Latin-ASCII")
  )

equipamentos_niveis$municipio[equipamentos_niveis$municipio == "alcantara"] <- "alcantaras"

equipamentos_niveis <- equipamentos_niveis[-25, ]

df_completo <- left_join(df, equipamentos_niveis, by = "municipio")

df_completo %>% filter(is.na(total))
```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Estatística Descritiva"

describe(df$total_de_psicologos)

describe(df$atencao_primaria)

sum(df$atencao_primaria)

describe(df$atencao_secundaria)

sum(df$atencao_secundaria)

describe(df$atencao_terciaria)

sum(df$atencao_terciaria)

describe(df$pop_psi)

describe(df$pop_pri)

describe(df$pop_sec)

```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Pressupostos"

shapiro.test(df$total_de_psicologos)
shapiro.test(df$atencao_primaria)
shapiro.test(df$atencao_secundaria)
shapiro.test(df$atencao_terciaria)
shapiro.test(df$populacao)
shapiro.test(df_completo$total)
shapiro.test(df$pop_psi)
shapiro.test(df$pop_pri)
shapiro.test(df$pop_sec)
shapiro.test(df$pop_ter)
```

```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Correlação"

# 1. Correlação: Total de Psicólogos × População
cor_total <- corr.test(df$populacao, df$total_de_psicologos, method = "spearman")

cor_total <- tibble(
  Estatística = c("Coeficiente r", "Valor-p", "Limite Inferior IC 95%", "Limite Superior IC 95%", "t-valor"),
  Valor = c(
    cor_total$r,
    cor_total$p,
    cor_total$ci$lower,
    cor_total$ci$upper,
    cor_total$t
  )
)

cor_total

# 2. Correlação: Atenção Primária × População
cor_primaria <- corr.test(df$populacao, df$atencao_primaria, method = "spearman")

cor_primaria <- tibble(
  Estatística = c("Coeficiente r", "Valor-p", "Limite Inferior IC 95%", "Limite Superior IC 95%", "t-valor"),
  Valor = c(
    cor_primaria$r,
    cor_primaria$p,
    cor_primaria$ci$lower,
    cor_primaria$ci$upper,
    cor_primaria$t
  )
)

cor_primaria

# 3. Correlação: Atenção Secundária × População
cor_secundaria <- corr.test(df$populacao, df$atencao_secundaria, method = "spearman")


cor_secundaria <- tibble(
  Estatística = c("Coeficiente r", "Valor-p", "Limite Inferior IC 95%", "Limite Superior IC 95%", "t-valor"),
  Valor = c(
    cor_secundaria$r,
    cor_secundaria$p,
    cor_secundaria$ci$lower,
    cor_secundaria$ci$upper,
    cor_secundaria$t
  )
)

cor_secundaria

# 4. Correlação: Estabelecimento × População
cor_est <- corr.test(df_completo$populacao, df_completo$total, method = "spearman")


cor_est <- tibble(
  Estatística = c("Coeficiente r", "Valor-p", "Limite Inferior IC 95%", "Limite Superior IC 95%", "t-valor"),
  Valor = c(
    cor_est$r,
    cor_est$p,
    cor_est$ci$lower,
    cor_est$ci$upper,
    cor_est$t
  )
)

cor_est

```




```{r}
#| message: false
#| warning: false
#| echo: false
#| label: "Mann-Whitney"

# Comparação de Médias: Atenção Primária x Atenção Secundária)

wilcox.test(df$atencao_primaria, df$atencao_secundaria, paired = FALSE, exact = FALSE)
tamanho_efeito_pri_sec <- wilcoxonR(df$atencao_primaria, df$atencao_secundaria, paired = FALSE)
print(tamanho_efeito_pri_sec)

#Comparação entre grupos: (pop_pri x pop_sec)

wilcox.test(df$pop_pri, df$pop_sec, paired = FALSE, exact = FALSE)
valores <- c(df$pop_pri, df$pop_sec)
grupos <- factor(rep(c("pop_pri", "pop_sec"), each = nrow(df)))
wilcoxonR(x = valores, g = grupos, paired = FALSE)


```

```{r}
# Gráfico de Dispersão: População x Total de Psicólogos
df$municipios <- str_to_title(tolower(df$municipios))
municipios_destaque <- c("Sobral", "Ipu", "Massape", "Santa Quiteria", "Pacuja")

grafico <- df |> 
  ggplot(aes(x = populacao, y = total_de_psicologos)) +
  geom_point(color = "black", size = 2) +
  geom_text_repel(
    data = subset(df, municipios %in% municipios_destaque),
    aes(label = municipios),
    size = 3
  ) +
  geom_smooth(method = "lm", se = FALSE, color = "blue", linetype = "solid") +
  labs(
    title = "Relação entre população e total de psicólogos por município",
    x = "População",
    y = "Total de Psicólogos"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 12)
  ) +
  scale_x_log10(labels = function(x) format(x, scientific = FALSE)) +
  scale_y_log10(labels = function(x) format(x, scientific = FALSE)) +
  scale_color_viridis_d() +
  annotate(
    "text", x = Inf, y = -Inf, hjust = 1.1, vjust = -1.1, 
    label = paste0("Spearman r = ", round(cor_total$Valor[1], 3),
                   "\nP-valor = ", signif(cor_total$Valor[2], 3)),
    size = 4, color = "black"
  )

ggsave("grafico_populacao_psicologos.png", plot = grafico, width = 8, height = 6, dpi = 600)

df$municipios <- str_to_title(tolower(df$municipios))
municipios_destaque <- c("Sobral", "Ipu", "Massape", "Santa Quiteria", "Pacuja")





#Gráfico de Dispersão: População x Equipamentos

formata_titulo <- function(nomes) {
  nomes %>%
    tolower() %>%
    str_squish() %>%
    str_to_title()
}

df_completo <- df_completo |>
  mutate(municipio = str_to_title(str_squish(municipio)))  #
municipios_destaque <- c("Sobral", "Ipu", "Massape", "Santa Quiteria", "Pacuja", "Santana do Acarau", "Pires Ferreira", "Senador Sa")

municipios_destaque <- formata_titulo(municipios_destaque)

df_labels <- df_completo %>%
  filter(municipio %in% municipios_destaque) %>%
  mutate(municipio_label = formata_titulo(municipio))

# Agora o gráfico
grafico3 <- ggplot(df_completo, aes(x = populacao, y = total)) +
  geom_point(color = "black", size = 2) +
  geom_text_repel(
    data = df_labels,
    aes(label = municipio_label, x = populacao, y = total),
    size = 3
  ) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  scale_x_log10(labels = scales::comma) +
  scale_y_log10(labels = scales::comma) +
  theme_minimal() +
  labs(
    title = "Relação entre população e total de equipamentos",
    x = "População",
    y = "Total de Equipamentos"
  )

ggsave("grafico_equipamentos_pop.png", plot = grafico3, width = 8, height = 6, dpi = 600)


library(ggpmisc)
municipios_destaque <- c("Sobral", "Ipu", "Massape", "Santa Quiteria", "Pacuja")
grafico_regressao <- ggplot(df_completo, aes(x = pop_mil, y = total)) +
  geom_point(color = "black", size = 2) +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  geom_text_repel(
    data = subset(df_completo, municipio %in% municipios_destaque),
    aes(label = municipio),
    size = 3
  ) +
  stat_poly_eq(
    aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
    formula = y ~ x,
    parse = TRUE,
    size = 4,
    label.x.npc = "right",
    label.y.npc = 0.15
  ) +
  labs(
    title = "Relação entre população (milhares) e total de estabelecimentos",
    x = "População (milhares de habitantes)",
    y = "Total de estabelecimentos"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14),
    axis.title = element_text(size = 12)
  )
ggsave(
  filename = "grafico_regressao_populacao_estabelecimentos.png",
  plot = grafico_regressao,
  width = 8,      
  height = 6,    
  dpi = 600 
)
```


